gui:
  nerdFontsVersion: "3"
  theme:
    cherryPickedCommitFgColor:
      - "#7F0000"
    cherryPickedCommitBgColor:
      - "none"
    selectedLineBgColor:
      - white
  spinner:
    frames: ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
git:
  branchLogCmd: git log --graph --color=always --format=format:'%C(#CC0000)%>|(17)%h%C(reset) %C(#7F0000)[%ar]%C(reset)%x09%C(#FF7F7F)%d%C(reset) %C(#CC0000)%s%C(reset) %C(#7F0000)- %an%C(reset)'
  allBranchesLogCmd: git log --graph --all --color=always --format=format:'%C(#CC0000)%>|(17)%h%C(reset) %C(#7F0000)[%ar]%C(reset)%x09%C(#FF7F7F)%d%C(reset) %C(#CC0000)%s%C(reset) %C(#7F0000)- %an%C(reset)'
customCommands:
  - key: '<c-p>'
    description: 'PR commands'
    commandMenu:
    - command: 'az repos pr list --output table'
      context: "localBranches"
      description: "Show all PRs details"
      showOutput: true
      stream: false
      outputTitle: "PRs details"
      loadingText: "Fetching PRs details"
    - command: >
        az repos pr list --source-branch {{.SelectedLocalBranch.Name}} --query "[0].pullRequestId" -o tsv |
        xargs az repos pr show --output table --id
      context: "localBranches"
      description: "Show PR details"
      showOutput: true
      outputTitle: "PR details"
      loadingText: "Fetching PR details"
    - command: 'az repos pr show --id $(az repos pr list --source-branch {{.SelectedLocalBranch.Name}} --query "[0].pullRequestId" -o tsv) --open'
      context: "localBranches"
      description: "Open PR in Azure DevOps"
      loadingText: "Opening PR in Azure DevOps"
      stream: true
  - key: "<c-c>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
          - name: "wip"
            description: "Incomplete commits"
            value: "wip"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
  - key: 'N'
    context: 'localBranches'
    description: "Create new conventional branch"
    prompts:
      - type: 'menu'
        title: Branch type'
        key: 'BranchType'
        options:
          - name: 'feature'
            description: 'new feature'
            value: 'feature'
          - name: 'fix'
            description: 'issue fixes'
            value: 'fix'
          - name: 'bugfix'
            description: 'minor bug fixes'
            value: 'bugfix'
          - name: 'hotfix'
            description: 'urgent fixes'
            value: 'hotfix'
          - name: 'release'
            description: 'prepare new versions'
            value: 'release'
          - name: 'refactor'
            description: 'improve code structure and readability'
            value: 'refactor'
          - name: 'experiment'
            description: 'experimental branch for new ideas'
            value: 'experiment'
      - type: 'input'
        title: 'Branch name'
        key: 'BranchName'
        initialValue: ''
    command: "git flow {{.Form.BranchType}} start {{.Form.BranchName}}"
    loadingText: 'Creating conventional branch...'
