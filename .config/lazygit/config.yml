gui:
  nerdFontsVersion: "3"
  theme:
    cherryPickedCommitFgColor:
      - "#7F0000"
    cherryPickedCommitBgColor:
      - "none"
    selectedLineBgColor:
      - white
  spinner:
    frames: ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
git:
  branchLogCmd: git log --graph --color=always --format=format:'%C(#CC0000)%>|(17)%h%C(reset) %C(#7F0000)[%ar]%C(reset)%x09%C(#FF7F7F)%d%C(reset) %C(#CC0000)%s%C(reset) %C(#7F0000)- %an%C(reset)'
  allBranchesLogCmd: git log --graph --all --color=always --format=format:'%C(#CC0000)%>|(17)%h%C(reset) %C(#7F0000)[%ar]%C(reset)%x09%C(#FF7F7F)%d%C(reset) %C(#CC0000)%s%C(reset) %C(#7F0000)- %an%C(reset)'
customCommands:
  - key: "<c-c>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
